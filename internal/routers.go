/*
 * Otto user service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package internal

import (
	"github.com/third-place/community-service/internal/controller"
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method string
	// Pattern is the pattern of the URI.
	Pattern string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

// NewRouter returns a new router.
func NewRouter() *gin.Engine {
	router := gin.Default()
	for _, route := range routes {
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodPatch:
			router.PATCH(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

var routes = Routes{
	{
		"CreateAPostReportV1",
		http.MethodPost,
		"/report/post",
		controller.CreatePostReportV1,
	},

	{
		"CreateAReplyReportV1",
		http.MethodPost,
		"/report/reply",
		controller.CreateReplyReportV1,
	},

	{
		"CreateAReplyV1",
		http.MethodPost,
		"/reply",
		controller.CreateReplyV1,
	},

	{
		"CreateFollowV1",
		http.MethodPost,
		"/follow",
		controller.CreateFollowV1,
	},

	{
		"CreateNewPostLikeV1",
		http.MethodPost,
		"/post/:uuid/like",
		controller.CreateNewPostLikeV1,
	},

	{
		"CreateNewPostV1",
		http.MethodPost,
		"/post",
		controller.CreateNewPostV1,
	},

	//{
	//	"CreateNewReplyLikeV1",
	//	http.MethodPost,
	//	"/reply/:uuid/like",
	//	controller.CreateNewReplyLikeV1,
	//},

	{
		"CreateShareV1",
		http.MethodPost,
		"/share",
		controller.CreateShareV1,
	},

	{
		"DeleteFollowV1",
		http.MethodDelete,
		"/follow/:uuid",
		controller.DeleteFollowV1,
	},

	{
		"DeleteLikeForPostV1",
		http.MethodDelete,
		"/post/:uuid/like",
		controller.DeleteLikeForPostV1,
	},

	{
		"DeletePostV1",
		http.MethodDelete,
		"/post/:uuid",
		controller.DeletePostV1,
	},

	{
		"GetDraftPostsV1",
		http.MethodGet,
		"/post/draft",
		controller.GetDraftPostsV1,
	},

	{
		"GetLikedPostsV1",
		http.MethodGet,
		"/likes/:username",
		controller.GetLikedPostsV1,
	},

	//{
	//	"GetLikesForPostV1",
	//	http.MethodGet,
	//	"/post/:uuid/like",
	//	controller.GetLikesForPostV1,
	//},

	//{
	//	"GetLikesForReplyV1",
	//	http.MethodGet,
	//	"/reply/:uuid/like",
	//	controller.GetLikesForReplyV1,
	//},

	{
		"GetPostRepliesV1",
		http.MethodGet,
		"/post/:uuid/reply",
		controller.GetPostRepliesV1,
	},

	{
		"GetPostV1",
		http.MethodGet,
		"/post/:uuid",
		controller.GetPostV1,
	},

	{
		"GetPostsFirehoseV1",
		http.MethodGet,
		"/post",
		controller.GetPostsFirehoseV1,
	},

	{
		"GetPostsForUserFollowsV1",
		http.MethodGet,
		"/follow-posts/:username",
		controller.GetPostsForUserFollowsV1,
	},

	{
		"GetShareV1",
		http.MethodGet,
		"/share/:uuid",
		controller.GetShareV1,
	},

	{
		"GetSharesV1",
		http.MethodGet,
		"/share",
		controller.GetSharesV1,
	},

	{
		"GetSuggestedFollowsForUserV1",
		http.MethodGet,
		"/suggested-follows/:username",
		controller.GetSuggestedFollowsForUserV1,
	},

	{
		"GetUserFollowersV1",
		http.MethodGet,
		"/followers/:username",
		controller.GetUserFollowersV1,
	},

	{
		"GetUserFollowsV1",
		http.MethodGet,
		"/follows/:username",
		controller.GetUserFollowsV1,
	},

	{
		"GetUserPostsRSSV1",
		http.MethodGet,
		"/posts/:username/rss",
		controller.GetUserPostsRSSV1,
	},

	{
		"GetUserPostsV1",
		http.MethodGet,
		"/posts/:username",
		controller.GetUserPostsV1,
	},

	{
		"UpdatePostV1",
		http.MethodPut,
		"/post",
		controller.UpdatePostV1,
	},
}
